<!-- Copyright 2014-2015 JInternals. http://jinternals.com Licensed under 
	the Apache License, Version 2.0 (the "License"); you may not use this file 
	except in compliance with the License. You may obtain a copy of the License 
	at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable 
	law or agreed to in writing, software distributed under the License is distributed 
	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
	express or implied. See the License for the specific language governing permissions 
	and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jinternals</groupId>
	<artifactId>spring-cloud</artifactId>
	<version>${release.project.version}</version>
	<packaging>pom</packaging>
	<name>spring-cloud</name>
	<description>spring cloud modules demo</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.image.prefix>${release.docker.image.prefix}</docker.image.prefix>
		<parent.dir>.</parent.dir>
	</properties>

	<modules>
		<module>spring-cloud-config-server</module>
		<module>spring-cloud-config-client</module>
	</modules>

	<developers>
		<developer>
			<id>Dev01</id>
			<name>Mradul Pandey</name>
			<email>pandeymradul@gmail.com</email>
			<url>http://www.jinternals.com/mradulpandey</url>
			<organization>Jinternals</organization>
			<organizationUrl>http://www.jinternals.com/mradulpandey</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>Asia/Kolkata</timezone>
			<properties>
				<picUrl>http://www.jinternals.com/mradulpandey</picUrl>
			</properties>
		</developer>
	</developers>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>1.2.5.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>Angel.SR3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>

		<filters>
			<filter>${parent.dir}/config/profiles/${build.profile.id}/config.properties</filter>
			<filter>${parent.dir}/config/project.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.1.15</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<!-- ... -->

					<!-- this is false by default, forces the plugin to generate the git.properties 
						file -->
					<generateGitPropertiesFile>true</generateGitPropertiesFile>

					<!-- The path for the to be generated properties file, it's relative 
						to ${project.basedir} -->
					<generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
				</configuration>

			</plugin>
			<!-- END OF GIT COMMIT ID PLUGIN CONFIGURATION -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- tag::plugin[] -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.2.3</version>
			</plugin>
			<!-- end::plugin[] -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<id>pre-clean-config</id>
						<phase>pre-clean</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${parent.dir}/config/project.properties</file>
							</files>
						</configuration>
					</execution>
					<execution>
						<id>initialize-config</id>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${parent.dir}/config/project.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>local</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>docker</id>
			<properties>
				<build.profile.id>docker</build.profile.id>
			</properties>
		</profile>
	</profiles>

</project>